<?php
namespace MyFrameWork\Request;

use MyFrameWork\Request\ProcessRequest;

class MyProcessRequest extends ProcessRequest {
    public function __construct() {
        $this->allowMethod('metodo1', 'teste');
    }
    public function getId() {
        return $this->id;
    }
    
    public function getTemplateFile() {
        return $this->getFilename();
    }
    
    protected function _metodo0() {
        return true;
    }
    
    protected function _metodo1() {
        $this->setTemplateFile('metodo1');
        return array('a' => 1, 'b' => 2);
    }
    
    protected function _metodo2() {
        return false;
    }
}

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-07-23 at 09:00:52.
 */
class ProcessRequestTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var MyProcessRequest
     */
    protected $object;

    protected function setUp() {
        $this->object = new MyProcessRequest();
    }

    protected function tearDown() {
        
    }

    public function testSetId() {
        $this->assertNull($this->object->getId());
        $this->object->setId(3);
        $this->assertEquals(3, $this->object->getId());
    }

    public function testSetTemplateFile() {
        $this->assertNull($this->object->getTemplateFile());
        $this->object->setTemplateFile('myTemplate');
        $this->assertEquals('myTemplate', $this->object->getTemplateFile());
    }

    public function testService() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    public function testGetPagedata() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ProcessRequest::setError
     * @todo   Implement testSetError().
     */
    public function testSetError() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    public function testGetMethod() {
        //$this->assertFalse(headers_sent(), "O header jÃ¡ foi enviado ? por quem ? onde ? pelo ResponseHTML ?");
        $this->assertFalse(ProcessRequest::isGETRequest());
        $this->assertFalse(ProcessRequest::isPOSTRequest());
        $this->assertNull(ProcessRequest::getMethod());
        
        $this->object->service(RequestType::GET, 'main', ResponseType::HTML);
        $this->assertEquals(RequestType::GET, ProcessRequest::getMethod());
        $this->assertTrue(ProcessRequest::isGETRequest());
        $this->assertFalse(ProcessRequest::isPOSTRequest());
        
        $this->object->service(RequestType::POST, 'main', ResponseType::HTML);
        $this->assertEquals(RequestType::POST, ProcessRequest::getMethod());
        $this->assertFalse(ProcessRequest::isGETRequest());
        $this->assertTrue(ProcessRequest::isPOSTRequest());
    }
}
